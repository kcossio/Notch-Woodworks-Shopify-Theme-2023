<div class="product-sticky-add-cart-new custom-sticky-form">
    {% form 'product', product, id:'product-form' , novalidate: 'novalidate' %}
    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" />
    <div class="sticky-cart-custom-wrapper">
    
    {% unless product.has_only_default_variant %}
    <variant-selector2 data-url="{{ product.url }}" data-section="{{ section.id }}">
    {% for option in product.options_with_values %}
    
    <label for="Option-{{ section.id }}-{{ forloop.index }}"></label>
    <div class="select-ption-custom">
    <select class="select-variant-options" name="options[{{option.name | escape}}]" id="Option-{{ section.id }}-{{ forloop.index0 }}">
    {% for value in option.values %}
    <option
    {% if option.selected_value == value %}
    selected="selected"
    {% endif %}
    value="{{ value }}">
    {{ value }}
    </option>
    {% endfor %}
    </select>
    </div>
    {% endfor %}
    <script type="application/json">
    {{product.variants | json}}
    </script>
    </variant-selector2>
    {% endunless %}
    
    <div class="submit-button-custom">
    <button
    type="submit"
    name="add"
    class="add-to-cart-custom-button btn"
    {%- if product.selected_or_first_available_variant.available == false -%} disabled {% endif %}>
    <span>
    {%- if product.selected_or_first_available_variant.available -%}
    
    {{ 'products.product.add_to_cart' | t }}
    {%- else -%}
    {{ 'products.product.sold_out' | t }}
    {%- endif -%}
    </span>
    
    </button>
    </div>
    </div>
    {% endform %}
    
    </div>
    
    <style>
    .sticky-cart-custom-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    }
    .select-variant-options {
    padding: 15px 30px;
    margin-right: 10px;
    cursor:pointer;
    box-shadow: 0px 1px 6px #0000008a;
    border-radius: 10px;
    }
    span.icon-caret svg {
    width: 20px;
    height: 20px;
    margin-bottom: 0;
    padding-bottom: 0;
    line-height: 0;
    }
    .submit-button-custom button {
    padding: 15px 30px;
    border: none;
    background: {{ section.settings.button_background_sticky }};
    color:{{section.settings.sticky_text}};
    cursor:pointer;
    box-shadow: 0px 1px 6px #0000008a;
    font-weight: 600;
    border-radius: 10px;
    }
    
    .product-sticky-add-cart-new.custom-sticky-form {
    position: fixed;
    padding: 15px 0;
    bottom: 0;
    z-index: 9999;
    width: 100%;
    background: {{section.settings.background}};
    transform: translateY(1000px);
    transition: .4s ease-in-out;
    }
    .sticky-cart2 .custom-sticky-form {
    transform:translateY(0) !important;
    }
    variant-selector2 {
    display: flex;
    }
    .sticky-cart .product-form__buttons button {
    background: {{ section.settings.button_background_sticky }};
    color:{{section.settings.sticky_text}};
    }
    .sticky-cart .product-form__buttons{
    background: {{section.settings.background}};
    }
    @media(max-width:500px){
    .sticky-cart-custom-wrapper{
    flex-direction:column;
    }
    variant-selector2 {
    display:none;
    }
    .select-variant-options {
    padding: 8px 25px;
    }
    </style>
    
    <script>
    
    class VariantSelector2 extends HTMLElement {
    constructor(){
    super();
    this.addEventListener('change', this.onVariantChange);
    }
    onVariantChange(){
    this.getSelectedOptions();
    this.getSelectedVariant();
    if(this.currentVariant){
    this.updateURL();
    this.updateFormID();
    }
    }
    
    getSelectedOptions(){
    this.options = Array.from(this.querySelectorAll('select'), select => select.value)
    console.log(this.options)
    }
    
    getVariantJSON(){
    this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent)
    return this.variantData;
    }
    
    getSelectedVariant(){
    this.currentVariant = this.getVariantJSON().find((variant) =>{
    const findings = !variant.options.map((option,index) => {
    return this.options[index] === option
    }).includes(false);
    if(findings) return variant;
    })
    
    console.log(this.currentVariant);
    }
    
    updateURL(){
    if(!this.currentVariant) return
    window.history.replaceState({},'', `${this.dataset.url}?variant=${this.currentVariant.id}`);
    }
    
    updateFormID(){
    const form_input = document.querySelector('#product-form').querySelector('input[name="id"]');
    form_input.value = this.currentVariant.id;
    }
    
    }
    customElements.define('variant-selector2', VariantSelector2);
    
    </script>
    
    <script>
    
    window.addEventListener('scroll', function(){
    const pageYOffset = window.pageYOffset;
    const buttonOffsetHeight = document.querySelector('.product-form__buttons').offsetTop;
    console.log(buttonOffsetHeight)
    if (pageYOffset > buttonOffsetHeight) {
    document.body.classList.add('sticky-cart2');
    }else{
    document.body.classList.remove('sticky-cart2');
    }
    })
    </script>